' /* 
' * Copyright (c) 2006-2007 Erin Catto http:
' *
' * This software is provided 'as-is', without any express or implied
' * warranty.  In no event will the authors be held liable for any damages
' * arising from the use of this software.
' * Permission is granted to anyone to use this software for any purpose
' * including commercial applications, and to alter it and redistribute it
' * freely, subject to the following restrictions:
' * 1. The origin of this software must not be misrepresented
 ' you must not '
' * claim that you wrote the original software. If you use this software
' * in a product, an acknowledgment in the product documentation would be
' * appreciated but is not required.
' * 2. Altered source versions must be plainly marked, and must not be
' * misrepresented the original software.
' * 3. This notice may not be removed or altered from any source distribution.
' */
' //  The pair manager is used by the broad-phase to quickly add/remove/find pairs
' //  of overlapping proxies. It is based closely on code provided by Pierre Terdiman.
' //  http:

' ver signos especiales de java: 
' http://www.w3schools.com/js/js_comparisons.asp
' ver: b2Pair.js

public b2_nullPair as  b2Settings.USHRT_MAX
public b2_nullProxy as b2Settings.USHRT_MAX
public b2_tableCapacity as b2Settings.b2_maxPairs
public b2_tableMask as b2Pair.b2_tableCapacity - 1
public e_pairBuffered as integer= 0x0001
public e_pairRemoved as integer = 0x0002
public e_pairFinal as integer= 0x0004

public userData as variant
public proxyId1 as variant = 0
public proxyId2 as variant = 0
public nextt as variant = 0 'cambio de next a nextt
public status as variant = 0

public  sub 	SetBuffered()
	 me.status = me.status or  me.e_pairBuffered
end

public  sub 	ClearBuffered()
	 me.status = me.status and (not me.e_pairBuffered)
 
end

public  sub 	IsBuffered() as booblean  
 return ( me.status and me.e_pairBuffered) = me.e_pairBuffered
end

public  sub 	SetRemoved()
		 me.status = me.status or  me.e_pairRemoved
end

public  sub 	ClearRemoved()
	 me.status = me.status and (not me.e_pairRemoved)
end

public  sub 	IsRemoved()
 return ( me.status & me.e_pairRemoved) = me.e_pairRemoved
end

public  sub 	SetFinal()
		 me.status = me.status or me.e_pairFinal
end

public  sub 	IsFinal()
 return ( me.status & me.e_pairFinal) == me.e_pairFinal
end


