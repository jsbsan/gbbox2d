' * Copyright (c) 2006-2007 Erin Catto http:
' *
' * This software is provided 'as-is', without any express or implied
' * warranty.  In no event will the authors be held liable for any damages
' * arising from the use of this software.
' * Permission is granted to anyone to use this software for any purpose
' * including commercial applications, and to alter it and redistribute it
' * freely, subject to the following restrictions:
' * 1. The origin of this software must not be misrepresented
 you must not  
' * claim that you wrote the original software. If you use this software
' * in a product, an acknowledgment in the product documentation would be
' * appreciated but is not required.
' * 2. Altered source versions must be plainly marked, and must not be
' * misrepresented the original software.
' * 3. This notice may not be removed or altered from any source distribution.
' */

Public 	linear1 as variant= new b2Vec2()
public	angular1 as varoamt= null
Public 	linear2 as varoamt= new b2Vec2()
public angular2 as varoamt= null


public  sub 	SetZero()
	 me.linear1.SetZero()
     me.angular1 = 0.0
	 me.linear2.SetZero()
     me.angular2 = 0.0
end

public  sub 	Set(x1 as variant, a1 as variant, x2 as variant, a2 as variant)
		 me.linear1.SetV(x1)
         me.angular1 = a1
		 me.linear2.SetV(x2)
         me.angular2 = a2
end

public  sub 	Compute(x1 as variant, a1 as variant, x2 as variant, a2 as variant) as variant ''funcio as variant ''funcion
		' // return b2Math.b2Dot( me.linear1, x1) + me.angular1 * a1 + b2Math.b2Dot( me.linear2, x2) + me.angular2 * a2
 '' TODO: posible funcion (revisar)

		return ( me.linear1.x*x1.x + me.linear1.y*x1.y) + me.angular1 * a1 + ( me.linear2.x*x2.x + me.linear2.y*x2.y) + me.angular2 * a2
 '' TODO: posible funcion (revisar)

end

public  sub _new()
		' //  initialize instance variables for references
		 me.linear1 = new b2Vec2()
		 me.linear2 = new b2Vec2()
end